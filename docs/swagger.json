{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "My swagger doc.",
        "title": "hackaton",
        "contact": {
            "name": "karl",
            "email": "foreverwantlive@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9090",
    "basePath": "/",
    "paths": {
        "/helloworld": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "Show hello world message",
                "responses": {
                    "200": {
                        "description": "hello world",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/student/get-student-id-by-name": {
            "get": {
                "description": "Retrieves the user ID by the user's name from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User ID by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the User",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID of the User",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Insufficient query arguments or no user found",
                        "schema": {
                            "$ref": "#/definitions/backend_internal_models.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/backend_internal_models.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "backend_internal_models.ErrResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}